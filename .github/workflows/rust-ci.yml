name: rust-ci

on:
  workflow_call: # https://docs.github.com/actions/using-workflows/reusing-workflows#using-inputs-and-secrets-in-a-reusable-workflow

env:
  CARGO_TERM_COLOR: always
  # Disable incremental compilation.
  #
  # Incremental compilation is useful as part of an edit-build-test-edit cycle,
  # as it lets the compiler avoid recompiling code that hasn't changed. However,
  # on CI, we're not making small edits; we're almost always building the entire
  # project from scratch. Thus, incremental compilation on CI actually
  # introduces *additional* overhead to support making future builds
  # faster...but no future builds will ever occur in any given CI environment.
  #
  # See https://matklad.github.io/2021/09/04/fast-rust-builds.html#ci-workflow
  # for details.
  CARGO_INCREMENTAL: 0
  # Allow more retries for network requests in cargo (downloading crates) and
  # rustup (installing toolchains). This should help to reduce flaky CI failures
  # from transient network timeouts or other issues.
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  RUST_BACKTRACE: 1

jobs:
  rust-ci:
    name: rust-ci
    strategy:
      matrix:
        # You can add more, for any target you'd like!
        toolchain:
          - 'stable'
          - '1.82.0'
          # - 'nightly'
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        include:
          - build: linux-gnu
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

          - build: macos-x86
            os: macos-latest
            target: x86_64-apple-darwin

          - build: windows-gnu
            os: windows-latest
            target: x86_64-pc-windows-gnu
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5

      - name: Install Rust - ${{ matrix.build }}
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
          targets: ${{ matrix.target }}
          toolchain: ${{ matrix.toolchain }}

      - name: Run check rust environment
        run: rustup show

      - uses: Swatinem/rust-cache@v2

      - name: Run cargo check
        run: cargo check --all --bins --examples --tests
        # check release build
        # run: cargo check --all --bins --examples --tests --release

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

      - name: Run cargo clippy
        run: cargo clippy -- -D warnings

      - name: Run cargo test
        run: cargo test --all --all-features -- --show-output --nocapture
